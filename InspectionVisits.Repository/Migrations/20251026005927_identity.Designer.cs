// <auto-generated />
using System;
using InspectionVisits.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InspectionVisits.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251026005927_identity")]
    partial class identity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InspectionVisits.Domain.Aggregate.InspectionAggregate.EntityToInspect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntitiesToInspect");
                });

            modelBuilder.Entity("InspectionVisits.Domain.Aggregate.InspectionAggregate.InspectionVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EntityToInspectId")
                        .HasColumnType("int");

                    b.Property<int>("InspectorId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScheduledAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityToInspectId");

                    b.HasIndex("InspectorId");

                    b.ToTable("InspectionVisits");
                });

            modelBuilder.Entity("InspectionVisits.Domain.Aggregate.InspectionAggregate.Inspector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Inspectors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Inspetor1@gamil.com",
                            FullName = "Inspector 1",
                            Phone = "01099999999",
                            Role = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Inspetor2@gamil.com",
                            FullName = "Inspector 2",
                            Phone = "01099999999",
                            Role = "inspector"
                        });
                });

            modelBuilder.Entity("InspectionVisits.Domain.Aggregate.InspectionAggregate.Violation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InspectionVisitId")
                        .HasColumnType("int");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InspectionVisitId");

                    b.ToTable("Violations");
                });

            modelBuilder.Entity("InspectionVisits.Domain.Aggregate.InspectionAggregate.InspectionVisit", b =>
                {
                    b.HasOne("InspectionVisits.Domain.Aggregate.InspectionAggregate.EntityToInspect", "EntityToInspect")
                        .WithMany("InspectionVisits")
                        .HasForeignKey("EntityToInspectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspectionVisits.Domain.Aggregate.InspectionAggregate.Inspector", "Inspector")
                        .WithMany()
                        .HasForeignKey("InspectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityToInspect");

                    b.Navigation("Inspector");
                });

            modelBuilder.Entity("InspectionVisits.Domain.Aggregate.InspectionAggregate.Violation", b =>
                {
                    b.HasOne("InspectionVisits.Domain.Aggregate.InspectionAggregate.InspectionVisit", null)
                        .WithMany("Violations")
                        .HasForeignKey("InspectionVisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspectionVisits.Domain.Aggregate.InspectionAggregate.EntityToInspect", b =>
                {
                    b.Navigation("InspectionVisits");
                });

            modelBuilder.Entity("InspectionVisits.Domain.Aggregate.InspectionAggregate.InspectionVisit", b =>
                {
                    b.Navigation("Violations");
                });
#pragma warning restore 612, 618
        }
    }
}
